[{"/Users/slm/react-portfolio-project/loflix/src/index.js":"1","/Users/slm/react-portfolio-project/loflix/src/App.js":"2","/Users/slm/react-portfolio-project/loflix/src/reportWebVitals.js":"3","/Users/slm/react-portfolio-project/loflix/src/components/Header.js":"4","/Users/slm/react-portfolio-project/loflix/src/components/Footer.js":"5","/Users/slm/react-portfolio-project/loflix/src/containers/Home/Home.js":"6"},{"size":522,"mtime":1610133068000,"results":"7","hashOfConfig":"8"},{"size":315,"mtime":1610126419000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609775525000,"results":"10","hashOfConfig":"8"},{"size":1004,"mtime":1609952690000,"results":"11","hashOfConfig":"8"},{"size":1887,"mtime":1609953598000,"results":"12","hashOfConfig":"8"},{"size":4186,"mtime":1610145326000,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pwm37i",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/Users/slm/react-portfolio-project/loflix/src/index.js",[],"/Users/slm/react-portfolio-project/loflix/src/App.js",[],["28","29"],"/Users/slm/react-portfolio-project/loflix/src/reportWebVitals.js",[],"/Users/slm/react-portfolio-project/loflix/src/components/Header.js",[],"/Users/slm/react-portfolio-project/loflix/src/components/Footer.js",[],"/Users/slm/react-portfolio-project/loflix/src/containers/Home/Home.js",["30","31"],"import React, {Component} from 'react'; \nimport { Container, Row, Col, Button, Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport {GiTomato} from 'react-icons/gi';\n\nimport './index.css';\n\n\nclass Home extends Component {\n    constructor(){\n        super()\n            this.state = {\n                loading : false, \n                trendingMovies : {},\n                isModalOpen: false\n            }\n            this.toggleModal = this.toggleModal.bind(this);\n    }\n    // Fetching data from API \n    componentDidMount() {\n        this.setState({loading : true})\n        fetch(`https://api.themoviedb.org/3/trending/movie/week?api_key=${process.env.REACT_APP_LOFLIX_API_KEY}`)\n        .then(response => response.json())\n        .then(data => this.setState({\n            loading : false,\n            trendingMovies : data\n        }))\n        \n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen : !this.state.isModalOpen\n        })\n    }\n\n    // Render Carousel \n    renderCarousel = () => {\n        let trendingMovies = this.state.trendingMovies.results\n        if(trendingMovies) {\n            trendingMovies.map(trendingMovie => {\n                console.log(trendingMovie.title)\n                return(\n                    <p>{trendingMovie.title}</p>\n                )\n                \n            })\n        }\n    }\n    \n    // Render banner elements + modal \n    renderBanner = () => {\n        let trendingMovies = this.state.trendingMovies.results\n        //let a = Math.floor(Math.random() * 20)\n        if(this.state.trendingMovies.results) {\n            const backDrop = trendingMovies[3].backdrop_path\n            const prefix = 'http://image.tmdb.org/t/p/original/'\n            const prefixModal = 'http://image.tmdb.org/t/p/w342/'\n            const posterPath = trendingMovies[3].poster_path\n    \n            return (\n                <div className=\"Home\">\n                    <div className='movie-spotlight'> \n                        <img src={prefix+backDrop} alt='hero' id='Hero' className=\"img-fluid\"/>\n                        <div className='container movie-spotlight-btn-title'>\n                            <Row>\n                                <Col className='mt-5'>\n                                    <h1 className=\"banner-title\">{trendingMovies[3].title}</h1>\n                                </Col>   \n                            </Row>\n                            <Row>\n                                <Col className='mt-2'>\n                                    <button className=\"btn btn-secondary banner-button\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={this.toggleModal}>More info</button>\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                    <Modal isOpen = {this.state.isModalOpen} toggle={this.toggleModal}>\n                        <ModalHeader toggle={this.toggleModal}><img src={prefixModal+posterPath} alt='modal pic' className=\"img-fluid\" id=\"modal-pic\"/></ModalHeader>\n                        <ModalBody>\n                            <Row>\n                                <Col>\n                                    <h5>{trendingMovies[3].title}</h5>\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col className='mb-2'>\n                                <GiTomato size={25} className='rottenTomato'/>{trendingMovies[3].vote_average}/10\n                                </Col>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <p>{trendingMovies[3].overview}</p>\n                                </Col>\n                            </Row>\n                        </ModalBody>\n                    </Modal>\n                </div>\n                \n            )\n        }\n    }\n\n\n        \n\n        render() {   \n            return(\n                <div>\n                    {this.renderBanner()}\n                    {this.renderCarousel()}\n                </div>\n            ) \n        }\n    }\n    \n   \n    \n\n\nexport default Home \n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":2,"column":10,"nodeType":"38","messageId":"39","endLine":2,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":2,"column":31,"nodeType":"38","messageId":"39","endLine":2,"endColumn":37},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]